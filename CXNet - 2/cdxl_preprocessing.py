# -*- coding: utf-8 -*-
"""CDXL-PreProcessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oU8fd5dXIID-_UPRufndmHAZAupX4943
"""

from IPython.display import set_matplotlib_formats
set_matplotlib_formats('pdf', 'svg')

import pandas as pd 
import os
import shutil

from google.colab import drive 
drive.mount('/content/gdrive')

# Create the data for positive samples (Github)

FILE_PATH = "gdrive/My Drive/Dataset/CDXL/chestxray/metadata.csv"
IMAGES_PATH = "gdrive/My Drive/Dataset/CDXL/chestxray/images"

df = pd.read_csv(FILE_PATH)
print(df.shape)

df.head()

TARGET_DIR = "gdrive/My Drive/Dataset/CDXL/Dataset/COVID"

if not os.path.exists(TARGET_DIR):
  os.mkdir(TARGET_DIR)
  print("COVID folder created")

cnt = 0

for(i, row) in df.iterrows():
  if row["finding"] == "COVID-19" and row["view"]=="PA":
    filename = row["filename"]
    image_path = os.path.join(IMAGES_PATH, filename)
    image_copy_path = os.path.join(TARGET_DIR, filename)
    shutil.copy2(image_path, image_copy_path)
    #print("Moving image ", cnt)
    cnt += 1

#print(cnt)

# Sampling of Images from Kaggle

import random 
KAGGLE_FILE_PATH = "gdrive/My Drive/Dataset/CDXL/chest-xray-from-kaggle/train/NORMAL"
TARGET_NORMAL_DIR = "gdrive/My Drive/Dataset/CDXL/Dataset/Normal"

image_names = os.listdir(KAGGLE_FILE_PATH)

random.shuffle(image_names)

for i in range(180):

  image_name = image_names[i]
  image_path = os.path.join(KAGGLE_FILE_PATH, image_name)

  target_path = os.path.join(TARGET_NORMAL_DIR, image_name)

  shutil.copy2(image_path, target_path)

  #print("Copying image ", i)

# Dataset : http://cb.lk/covid_19

!wget http://cb.lk/covid_19

!unzip covid_19

TRAIN_PATH = "CovidDataset/Train"
VAL_PATH = "CovidDataset/Val"

import numpy as np
import matplotlib.pyplot as plt 
import keras 
from keras.layers import *
from keras.models import * 
from keras.preprocessing import image 
from tensorflow.keras.callbacks import TensorBoard

# CNN Based Model in Keras 

model = Sequential()

model.add(Conv2D(32, kernel_size=(3,3), activation='relu', input_shape=(224,224,3)))
model.add(Conv2D(64, (3,3), activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))
#model.add(Dropout(0.25))

model.add(Conv2D(64, (3,3), activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))
#model.add(Dropout(0.25))

model.add(Conv2D(128, (3,3), activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))
#model.add(Dropout(0.25))

model.add(Flatten())
model.add(Dense(64, activation='relu'))
#model.add(Dropout(0.5))
model.add(Dense(1, activation='sigmoid'))

model.compile(loss=keras.losses.binary_crossentropy, optimizer='adam', metrics=['accuracy'])

model.summary()

# Train from scracth 

train_datagen = image.ImageDataGenerator(
    rescale = 1./255,
    shear_range = 0.2,
    zoom_range = 0.2,
    horizontal_flip = True
)

test_datagen = image.ImageDataGenerator(rescale=1./255)

train_generator = train_datagen.flow_from_directory(
    'CovidDataset/Train',
    target_size = (224, 224),
    batch_size = 32, 
    class_mode = 'binary'
)

train_generator.class_indices

validation_generator = test_datagen.flow_from_directory(
    'CovidDataset/Val',
    target_size = (224, 224),
    batch_size = 32, 
    class_mode = 'binary'
)

import datetime 

log_dir = "logs/fit/" + datetime.datetime.now().strftime("%Y%m%d-%H%M%S")
tensorboard_callback = TensorBoard(log_dir=log_dir, histogram_freq= 1)

hist = model.fit_generator(
    train_generator,
    steps_per_epoch = 5,
    epochs = 20,
    validation_data = validation_generator,
    validation_steps = 1,
    callbacks = [tensorboard_callback]
)

!kill 867

# Clear any logs from previous runs
!rm -rf ./logs/ 
!rm -rf ./CovidDataset/

# Commented out IPython magic to ensure Python compatibility.
# %reload_ext tensorboard
# %tensorboard --logdir logs/fit

!wget -nc https://raw.githubusercontent.com/brpy/colab-pdf/master/colab_pdf.py
from colab_pdf import colab_pdf
colab_pdf('CDXL.ipynb')

import numpy as np
np.mod((13,4))