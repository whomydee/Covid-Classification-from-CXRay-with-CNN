# -*- coding: utf-8 -*-
"""CDXL-ModelTraining.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NV1fx4oKF7vP6GtFLVpss9uVlndhYaXW
"""

!wget http://cb.lk/covid_19

!unzip covid_19

TRAIN_PATH = "CovidDataset/Train"
VAL_PATH = "CovidDataset/Val"

import numpy as np
import matplotlib.pyplot as plt 
import keras 
from keras.layers import *
from keras.models import * 
from keras.preprocessing import image 
from tensorflow.keras.callbacks import TensorBoard

# CNN Based Model in Keras 

model = Sequential()

model.add(Conv2D(32, kernel_size=(3,3), activation='relu', input_shape=(224,224,3)))
model.add(Conv2D(64, (3,3), activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))
#model.add(Dropout(0.25))

model.add(Conv2D(64, (3,3), activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))
#model.add(Dropout(0.25))

model.add(Conv2D(128, (3,3), activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))
#model.add(Dropout(0.25))

model.add(Flatten())
model.add(Dense(64, activation='relu'))
#model.add(Dropout(0.5))
model.add(Dense(1, activation='sigmoid'))

model.compile(loss=keras.losses.binary_crossentropy, optimizer='adam', metrics=['accuracy'])

model.summary()

# Train from scracth 

train_datagen = image.ImageDataGenerator(
    rescale = 1./255,
    shear_range = 0.2,
    zoom_range = 0.2,
    horizontal_flip = True
)

test_datagen = image.ImageDataGenerator(rescale=1./255)

train_generator = train_datagen.flow_from_directory(
    'CovidDataset/Train',
    target_size = (224, 224),
    batch_size = 32, 
    class_mode = 'binary'
)

train_generator.class_indices

validation_generator = test_datagen.flow_from_directory(
    'CovidDataset/Val',
    target_size = (224, 224),
    batch_size = 32, 
    class_mode = 'binary'
)

import datetime 

log_dir = "logs/fit/" + datetime.datetime.now().strftime("%Y%m%d-%H%M%S")
tensorboard_callback = TensorBoard(log_dir=log_dir, histogram_freq= 1)

hist = model.fit_generator(
    train_generator,
    steps_per_epoch = 5,
    epochs = 20,
    validation_data = validation_generator,
    validation_steps = 1,
    callbacks = [tensorboard_callback]
)

# Commented out IPython magic to ensure Python compatibility.
# %load_ext tensorboard
# %tensorboard --logdir logs/fit